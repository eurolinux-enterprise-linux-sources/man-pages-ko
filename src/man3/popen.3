.\" Copyright 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)popen.3	6.4 (Berkeley) 4/30/91
.\"
.\" Converted for Linux, Mon Nov 29 14:45:38 1993, faith@cs.unc.edu
.\" Modified Sat May 18 20:37:44 1996 by Martin Schulze (joey@linux.de)
.\" Modified 7 May 1998 by Joseph S. Myers (jsm28@cam.ac.uk)
.\"
.TH POPEN 3  "1998년 4월 7일" "BSD MANPAGE" "리눅스 프로그래머 매뉴얼"
.SH 이름
popen, pclose \- 프로세스 I/O
.SH 사용법
.B #include <stdio.h>
.sp
.BI "FILE *popen(const char *" command ", const char *" type );
.sp
.BI "int pclose(FILE *" stream );
.SH 설명
.B popen()
함수는 pipe, fork에 의해 생성된 프로세스를 열고 shell을 기동한다.
pipe는 단 방향으로 정의되었기 때문에,
.I type
인자는 읽기-쓰기가 아니라 둘중 하나만 지정한다.; 결과 스트림은 읽기-전용이거나 쓰기-전용이다.
.PP
.I command
인자는 shell 명령어 라인이 포함하는 null로 종료된 문자열에 대한 포인터이다.
이 명령어는
.B \-c
플래그를 사용하여
.I /bin/sh
에 전달된다.; 만일 인자가 있다면, 해석은 shell에 의해 행해진다.
.I mode
인자는 읽기를 위한 'r'이나 쓰기를 위한 'w'중 하나인 null로 종료된 문자열에 대한 포인터이다.
.PP
.B popen()
에서 반환 값은 
.BR fclose() 보다
.B pclose()
로 종료되어야 하는 보통 표준 I/O 스트림이다.
그런 스트림에 쓰는것은 명령어의 표준 입력에 쓰는것과 같다;명령어의 표준 출력은 만일 이것이 명령어 자체에 의해 수정되지 않았다면
.BR popen() 이
호출하는 프로세스의 것과 같다. 대조적으로, 
``popened'' 스트림에서 읽기는 명령어의 표준 출력을 읽고, 명령어 표준 입력은 
.BR popen 을
호출한 프로세스의 것과 같다.
.PP
.B popen
스트림은 기본적으로 완전 버퍼된다는 점에 주의해라.
.PP
.B pclose
함수는 종료되는 관련 프로세스를 기다리며 
.BR wait4 가
반환하는 것처럼 명령어의 종료 상태를 반환한다.
.SH 반환값
.B popen
함수는 만일
.BR fork (2)
나
.BR pipe (2)
호출이 실패하거나 메모리를 할당할수 없다면,
.B NULL
을 반환한다.
.PP
.B pclose
함수는
.\" These conditions actually give undefined results, so I commented
.\" them out.
.\" .I stream
.\" is not associated with a ``popened'' command, if
.\".I stream
.\" already ``pclosed'', or if
만일
.B wait4
가 에러를 반환하거나 몇몇 다른 에러가 발견되면 \-1을 리턴한다.
.SH 에러
.B popen
함수는 만일 메모리 할당이 실패한다면, 
.I errno
를 설정하지 않는다.
.BR fork() " 나 " pipe()
에서 실패한다면, 
.I errno
는 적당히 설정된다.
만일
.I mode
인자가 무효하고, 이 조건이 발견된다면, 
.I errno
는
.BR EINVAL 로
설정된다.
.PP
만일
.B pclose()
가 자식 상태를 얻을수 없다면,
.I errno
는
.BR ECHILD 로
설정된다.
.SH 호환
POSIX.2
.SH 버그
읽기 위해 열려진 명령어의 표준 입력은 
.BR popen() 을
호출하는 프로세스가 가지고 있는 offset을 공유하기 때문에, 만일 원래 프로세스가 버퍼된 읽기를 한다면,
명령어의 입력 위치는 예상될수 없다. 비슷하게 쓰기 위해 열려진 명령어에서의 출력은 원래 프로세스의
것과 섞일수 있다. 뒤의 문제는
.BR popen 전에
.BR fflush (3)를
호출하여 피할수 있다.

.PP
shell 실행시 실패는 명령어 실행의 shell실패나 명령어의 종료와 구별되어야 한다.
유일한 힌트는 127 exit 상태이다.
.SH 역사
.B popen()
와
.B pclose()
함수는 Version 7 AT&T UNIX에서 나타났다.
.SH 관련 항목
.BR fork (2),
.BR sh (1),
.BR pipe (2),
.BR wait4 (2),
.BR fflush "(3),
.BR fclose (3),
.BR fopen (3),
.BR stdio (3),
.BR system (3).
.SH 역자
정강훈 <skyeyes@soback.kornet.net>, 2001년 4월 9일
