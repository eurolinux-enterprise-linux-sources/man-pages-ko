.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"     libc.info (from glibc distribution)
.\" Modified Sat Jul 24 19:12:00 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Sep  3 20:29:36 1995 by Jim Van Zandt <jrv@vanzandt.mv.com>
.\" Changed network into host byte order (for inet_network),
.\"     Andreas Jaeger <aj@arthur.rhein-neckar.de>, 980130.
.\"
.TH INET 3  "1995년 9월 3일" "BSD" "리눅스 프로그래머 매뉴얼"
.SH 이름
inet_aton, inet_addr, inet_network, inet_ntoa, inet_makeaddr, inet_lnaof, 
inet_netof \- 인터넷 주소 조작 루틴들
.SH 사용법
.nf
.B #include <sys/socket.h>
.B #include <netinet/in.h>
.B #include <arpa/inet.h>
.sp
.BI "int inet_aton(const char *" cp ", struct in_addr *" inp ");"
.sp
.BI "unsigned long int inet_addr(const char *" cp );
.sp
.BI "unsigned long int inet_network(const char *" cp );
.sp
.BI "char *inet_ntoa(struct in_addr " in );
.sp
.BI "struct in_addr inet_makeaddr(int " net ", int " host );
.sp
.BI "unsigned long int inet_lnaof(struct in_addr " in );
.sp
.BI "unsigned long int inet_netof(struct in_addr " in );
.fi
.SH 설명
\fBinet_aton()\fP 함수는 표준 수-점 표기인 인터넷 호스트 주소 \fIcp\fP를 이진 
데이터로 바꾼다. 그리고 \fIinp\fP 이 가리키는 구조체에 저장한다. 만일 주소가
유효하다면 0 이 아닌 값이 반환되며 무효하다면 0 이 반환된다.
.PP
\fBinet_addr()\fP 함수는 수-점 표기인 인터넷 호스트 주소 \fIcp\fP를 네트웍 바이트 순서인
이진 데이터로 바꾼다. 만일 입력이 유효하지 않다면, INADDR_NONE (보통 \-1)이 반환된다.
이 함수는 위에서 언급한 \fBinet_aton\fP에 대한 구식 인터페이스이다.; 이 함수는 쓸모없다.
왜냐하면 \-1은 유효한 주소(255.255.255.255)이고, \fBinet_aton\fP는 에러가 리턴되었음을 가리키는
확실한 방법을 제공하기 때문이다.
.PP
\fBinet_network()\fP 함수는 수-점 표기인 주소 \fIcp\fP에서 호스트 바이트 순서인 네트웍 수를
알아낸다. 입력이 유효하지 않다면, \-1이 리턴된다. 
.PP
\fBinet_ntoa()\fP 함수는 네트웍 바이트 순서로 주어진 인터넷 호스트 주소 \fIin\fP을 표준
점-수 표기의 문자열로 바꾼다.
문자열은 정적으로 할당된 버퍼로 반환되며 이 함수의 연속적인 호출은 이 공간을 덮어 쓴다.
.PP
\fBinet_makeaddr()\fP 함수는 둘다 로컬 호스트 바이트 순서인 네트웍 수 \fInet\fP와
네트웍 \fInet\fP내 로컬 주소 \fIhost\fP를 결합하여 네트웍 바이트 순서인 인터넷 호스트 주소를
만든다.
.PP
\fBinet_lnaof()\fP 함수는 인터넷 주소 \fIin\fP의 로컬 호스트 주소 부분을 반환한다.
로컬 호스트 주소는 지역 호스트 바이트 순서로 반환된다.
.PP
\fBinet_netof()\fP 함수는 인터넷 주소 \fIin\fP 의 네트웍 수 부분은 반환한다.  
네트웍 수는 지역 호스트 바이트 순서로 반환된다.
.PP
\fBinet_makeaddr()\fP, \fBinet_lnoaf()\fP 그리고 \fBinet_netof()\fP 에서 사용되는
구조체 \fIin_addr\fP는 \fInetinet/in.h\fP에 정의되어 있다:
.sp
.RS
.nf
.ne 7
.ta 8n 16n
struct in_addr {
	unsigned long int s_addr;
}
.ta
.fi
.RE
.PP
i80x86에서 호스트 바이트 순서는 Least Significant Byte가 처음이고, 반면에 인터넷에서 사용되는 
것처럼 네트웍 바이트 순서는 Most Significant Byte가 처음이다.
.SH 호환
BSD 4.3
.SH 관련 항목
.BR gethostbyname "(3), " getnetent "(3), " hosts "(5), " networks (5)
.SH 역자
정강훈 <skyeyes@soback.kornet.net>, 2001년 3월 12일
