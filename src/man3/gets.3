.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Wed Jul 28 11:12:07 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Sep  8 15:48:13 1995 by Andries Brouwer (aeb@cwi.nl)
.\"
.\" Korean version revision history
.\" r1.1 2004-03-10 14:15:51  윤현호
.\"
.TH GETS 3  "1993년 4월 4일" "GNU" "리눅스 프로그래머 매뉴얼"
.SH 이름
fgetc, fgets, getc, getchar, gets, ungetc \- 문자와 문자열을 입력 받는 함수
.SH 사용법
.nf
.B #include <stdio.h>
.sp
.BI "int fgetc(FILE *" stream ");"
.nl
.BI "char *fgets(char *" "s" ", int " "size" ", FILE *" "stream" ");"
.nl
.BI "int getc(FILE *" stream ");"
.nl
.BI "int getchar(void);"
.nl
.BI "char *gets(char *" "s" ");"
.nl
.BI "int ungetc(int " c ", FILE *" stream ");"
.SH 설명
.BR fgetc() 는
.IR stream 이
가리키는 바로 다음 문자를 읽어서 원래 데이터형인
.BR unsigned
.BR char 를
.BR int 로
변환한 다음 반환값으로 돌려준다. 만약 파일의 끝에 도달했을 경우에는
.BR EOF 를
반환하고 문제가 발생하면 에러를 반환한다.
.PP
.BR getc() 는
.IR stream 을
여러 번 검사하는 매크로 함수로 구현되어 있다는 점을 제외하고는
.BR fgetc() 와
동일하다.
.PP
.BR getchar() 는
\fBgetc(\fR\fIstdin\fR\fB)\fR와
동일하다. 즉 표준 입력을 통해서 문자를 입력 받는다.
.PP
.BR gets() 는
표준 입력(\fIstdin\fR)으로부터
개행 문자나
.BR EOF 로
끝나는 한 줄을 입력 받아서
.IR s 가
가리키는 버퍼에 저장하고 마지막을
.BR '\e0' 로
변경한다. 그러나 버퍼 오버플로우에 대한 검사를 하지 않는다.
(이 점에 대해서는 아래의
.BR 버그 를
보기 바란다.)
.PP
.BR fgets() 는
최대
.I size - 1
개 이하의 문자를
.IR stream 으로부터
읽어서
.IR s 가
가리키는 버퍼에 저장한다. 그러나
.BR EOF 나
개행 문자를 입력 받았을 경우에는 읽기를 멈춘다.
입력 받은 개행 문자는 그대로 버퍼에 저장하고
.BR '\e0' 을
버퍼의 마지막 문자 다음에 추가한다.
.PP
.BR ungetc() 는
.IR c 를
.BR "unsigned char" 로
변환한 다음, 읽기 명령에 의해 다시 읽어들일 수 있도록
.IR stream 에
푸쉬한다.
푸쉬한다 - 라는 말은 문자가 지정한 위치에 명령의 역순으로
저장된다는 말이다; 즉 단 한 문자의 푸쉬만을 보장할 수 있다.
.PP
여기에서 설명한 함수는 서로 섞어서 호출할 수도 있고,
같은 종류의 입력 스트림에 대한
.B stdio
라이브러리의 함수와 섞어서 호출할 수도 있다.
.SH "반환값"
\fBfgetc()\fR, \fBgetc()\fR와 \fBgetchar()\fR는
\fBunsigned char\fR로 읽어들인 문자를
.BR int 로
형 변환하여 반환한다. 그러나 파일의 마지막일 경우에는
.BR EOF 를,
에러가 발생했을 경우에는 에러값을 반환한다.
.PP
\fBgets()\fR와 \fBfgets()\fR는 성공했을 경우 문자열의 포인터
.IR s 를
반환한다. 그리고 에러가 발생하거나 파일의 마지막에 도달한 경우,
또한 아무런 문자도 입력 받지 못한 경우에는
.BR NULL 을
반환한다.
.PP
.BR ungetc() 는
성공했을 때는
.IR c 를
반환하고 에러가 발생했을 경우에는
.BR EOF 를
반환한다.
.SH 호환
ANSI - C, POSIX.1
.SH 버그
가급적 \fBgets()\fR를 사용하지 마라. \fBgets()\fR가 얼마나 많은 문자를
읽어들일 지 사전에 알 수 없고, 그로 인해 \fBgets()\fR가 버퍼의 용량을
넘어서는 범위에 문자를 저장할 위험이 있다. 그러므로 \fBgets()\fR를
사용하는 것은 컴퓨터 보안에 치명적인 타격을 줄 수 있다.
(버퍼 오버플로우를 이용한 해킹이 가능하다. - 역주) 대신 \fBfgets()\fR을
사용하는 것이 좋다.
.PP
여기에서 설명한 함수의 입력 스트림을  \fBstdio\fR 라이브러리의
로우-레벨 시스템 콜인 \fBread()\fR의 파일 디스크립터와 공유해서
사용하는 것은 결코 좋은 방법이 아니다.
그 결과가 정의되어 있지 않아서 의도하지 않은 방향으로 동작할 가능성이
크기 때문이다.
.SH 관련 항목
.BR read "(2), " write "(2), " fopen "(3), " fread (3),
.BR scanf "(3), " puts "(3), " fseek "(3), " ferror (3)
.SH 번역
류정욱 <compiler@kldp.org>, 2000년 4월 21일
