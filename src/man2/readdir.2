.\" Copyright (C) 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 22 July 1995 by Michael Chastain <mec@duracef.shout.net>:
.\"   In 1.3.X, returns only one entry each time; return value is different.
.TH READDIR 2  "1995년 6월 22일" "Linux 1.3.6" "리눅스 프로그래머 매뉴얼"
.SH 이름
readdir \- 디렉토리 엔트리를 읽는다.
.SH 사용법
.nf
.B #include <unistd.h>
.B #include <linux/dirent.h>
.B #include <linux/unistd.h>
.sp
.B _syscall3(int, readdir, uint, fd, struct dirent *, dirp, uint, count);
.sp
.BI "int readdir(unsigned int " fd ", struct dirent *" dirp ", unsigned int " count );
.fi
.SH 설명
이것은 여러분이 흥미로워 할 함수가 아니다.
C 라이브러리 인터페이스에 구현된 POSIX 를 위한 
.BR readdir (3)를
참조해라.
이 페이지는 이미 바뀐 예전 커널 시스템 콜 인터페이스를 위한 문서이며 이 함수는
.BR getdents (2)가
대신하고 있다.
.PP
.B readdir
는
.I fd
에 의해 포인트된 디렉토리에서
.IR dirp 에
의해 포인트된 메모리 지역에 
.I dirent
구조체를 읽는다.
.I count
인자는 무시된다; 
.PP
.I dirent
구조체에 다음과 같이 선언된다:
.PP
.RS
.nf
struct dirent
{
    long d_ino;                 /* 아이노드 수 */
    off_t d_off;                /* \fIdirent\fP 의 오프셋 */
    unsigned short d_reclen;    /* \fId_name\fP 의 길이 */
    char d_name [NAME_MAX+1];   /* 파일 이름(널로 종료) */
}
.fi
.RE
.PP
.I d_ino
는 inode 숫자이다.
.I d_off
는 디렉토리의 시작에서
.IR dirent 까지의 
거리이다.
.I d_reclen
는 
널 종결자를 세지 않은
.IR d_name 의
크기이다.
.I d_name
는 널로 끝난 파일 이름이다.
.PP
.SH 반환값
성공시, 1이 리턴된다.
디렉토리 끝에서 0이 리턴된다.
에러시, \-1이 리턴되며
.I errno
는 적당한 값으로 설정된다.
.SH 에러
.TP
.B EBADF
유효 하지 않은 파일 기술자
.IR fd .
.TP
.B EFAULT
인자가 호출 프로세스의 주소 공간외를 가리키고 있다.
.TP
.B EINVAL
결과 버퍼가 너무 작다.
.TP
.B ENOENT
해당 디렉토리가 없다.
.TP
.B ENOTDIR
파일 기술자가 디렉토리를 가리키지 않는다.
.SH 호환
이 시스템 콜은 리눅스에 의존한다.
.SH 관련 항목
.BR getdents (2),
.BR readdir (3)
.SH 역자
정강훈 <skyeyes@soback.kornet.net>, 2000년 8월 7일

