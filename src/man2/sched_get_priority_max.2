.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\" 
.\" 한국어 번역 : ASPLINUX    2000년 7월 27일
.\" 
.TH GET_PRIORITY_MAX 2 "1996-04-10" "Linux 1.3.81" "Linux Programmer's Manual"
.SH 이름
sched_get_priority_max, sched_get_priority_min  \- 정적 선행 범위를 가진다.
.SH 사용법
.B #include <sched.h>
.sp
\fBint sched_get_priority_max(int \fIpolicy\fB);
.sp
\fBint sched_get_priority_min(int \fIpolicy\fB);
.fi
.SH 설명
.B sched_get_priority_max 
는 \fIpolicy\fR로 간주되는 스케줄링 알고리즘으로 쓰일 수 있는 최대 선행값을 반환한다. 
.B sched_get_priority_min 
는 \fIpolicy\fR로 간주되는 스케줄링 알고리즘으로 쓰일 수 있는 최소 선행값을 반환한다. 지원되는 \fIpolicy\fR 값은 아래와 같다.
.IR SCHED_FIFO , 
.IR SCHED_RR ,
와 
.IR SCHED_OTHER .

수치적으로 높은 선행값의 프로세스는 수치적으로 낮은 선행값의 프로세스 보다 먼저 예정된다.
그래서 \fBsched_get_priority_max\fR에 의해 반환되는 값은
\fBsched_get_priority_min\fR에 의해 반환 되는 값보다 크게 된다.

\fISCHED_FIFO\fR와 \fISCHED_RR\fR를 위한 리눅스는 정적 선행값 범위 1~99와 \fISCHED_OTHER\fR를 위한 priority 0을 허락한다. 많은 방법에 대한 선행 범위 스케줄링은 변경할 수 없다.

우선권 예약의 수준은 다른 POSIX 시스템에선 다양하다. 그러므러 이식 어플리케이션이 가상 우선권 수준을 사용하고, \fBsched_get_priority_max\fR와 \fBsched_get_priority_min\fR으로 주어진 간격으로 맵핑하는 것은 좋은 것이다.
POSIX.1b는 \fISCHED_FIFO\fR and \fISCHED_RR\fR를 위한 최대값과 최소값 사이의 적어도 32의 넓이가 필요하다.


.B sched_get_priority_max
와
.B sched_get_priority_min
가 가능한 POSIX 시스템systems은 
i<unistd.h>안의
.I _POSIX_PRIORITY_SCHEDULING
로 규정짓는다.

.SH 반환값
성공 시,
.B sched_get_priority_max
와
.B sched_get_priority_min
은 지정된 스케줄에서 최대/최소값을 반환한다..
에러 시, \-1 이 반환된다.,
.I errno
는 적절히 설정된다..
.SH 에러
.TP
.B EINVAL
매개 변수 \fIpolicy\fR가 지정된 스케줄 방침을 규정하지 못한다. 
.SH 호환
POSIX.1b (formerly POSIX.4)
.SH 관련 항목
.BR sched_setscheduler (2), 
.BR sched_getscheduler (2), 
.BR sched_setparam (2), 
.BR sched_getparam (2). 
.PP
.BR sched_setscheduler (2) 
에는 리눅스 스케줄링 개요에 대한 설명이 있다.
.PP
.I Programming for the real world \- POSIX.4
by Bill O. Gallmeister, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
.br
.I IEEE Std 1003.1b-1993
(POSIX.1b standard)
.br
.I ISO/IEC 9945-1:1996
.SH 역자
ASPLINUX<man@asp-linux.co.kr>, 2000년 7월 29일
