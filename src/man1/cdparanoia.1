.TH CDPARANOIA 1
.SH 이름
cdparanoia (Paranoia 개정판 III) \- 데이터 검증 기능을 가진 오디오 CD
읽기 유틸리티
.SH 날짜
version III release alpha 9.7 (13 Dec 1999)
.SH 사용법
.B cdparanoia
.RB [ options 옵션 ]
.B span 범위
.RB [ outfile 출력화일 ]
.SH 설명
.B cdparanoia
는 CDDA ( 컴팩트 디스크 디지털 오디오 ) 호환 CDROM 드라이브로 부터
오디오 트랙을 검색합니다. 그리고 그 자료는 화일이나 WAV, AIFF, AIFF-C
또는 raw 방식의 표준 출력물로 직접적으로 저장될수 있습니다. 대부분의
ATAPI, SCSI 와 여러 상표의 CDROM 드라이브는 이것을 지원할수 있을 것
입니다;
.B cdparanoia
는 드라이브가 CDDA와 호환이 된다면 쓸수 있습니다.
.P
기본적은 읽기에다가,
.B cdparanoia
는 추가적인 확고한 데이터 검증(data verification),
동기화(synchronization), 에러 취급(error handling)과 긁힘 보완
호환(scratch reconstruction capability)기능을 가지고 있습니다.
.SH 옵션

.TP
.B \-v --verbose
자동 반응과 읽기 상황에 대해 자세히 보여줍니다. 셋업과 디버깅에
좋습니다.

.TP
.B \-q --quiet
읽기 상황에서 어떠한 과정이나 에러 정보를 표시하지 않습니다.

.TP
.B \-e --stderr-progress
스크립트에 표시하기 위해(for wrapper scripts) 진행 정보를 stderr에
강제로 출력시킵니다.

.TP
.B \-V --version
이 프로그램의 버젼을 출력합니다.

.TP
.B \-Q --query
CDROM 드라이브 자동반응(autosense)를 수행하고, CDROM의 정보를 얻어내
출력한 후 빠져나옵니다.

.TP
.B \-s --search-for-drive
/dev/cdrom 링크가 존재하더라도 CDROM 드라이브를 찾도록 합니다.

.TP
.B \-h --help
.B cdparanoia
의 사용법과 옵션을 출력합니다.

.TP
.B \-p --output-raw
호스트 바이트 정렬(host byte order)상태로 인터리빙된 샘플을 헤더가
없는 raw 16 bit PCM 데이터로 출력합니다. 작거나(little) 혹은  큰(big)
엔디언 바이트 정렬(endian byte order)를 사용하려면 아래 설명과 같이
.B \-r
혹은
.B \-R
옵션을 사용하시길 바랍니다.

.TP
.B \-r --output-raw-little-endian
LSB 퍼스트 바이트 정렬(first byte order)상태로 인터리빙된 샘플을
헤더가 없는 raw 16 bit PCM 데이터로 출력합니다.

.TP
.B \-R --output-raw-big-endian
MSB 퍼스트 바이트 정렬(first byte order)상태로 인터리빙된 샘플을
헤더가 없는 raw 16 bit PCM 데이터로 출력합니다.

.TP
.B \-w --output-wav
마이크로소프트(Micro$oft) RIFF WAV 형식으로 데이터를 출력합니다.(WAV
데이터는 항상 LSB 퍼스트 바이트 정렬(first byte order) 입니다.)

.TP
.B \-f --output-aiff
애플(Apple) AIFF 형식으로 데이터를 출력합니다. (AIFF 데이터는 항상 MSB
퍼스트 바이트 정렬(first byte order) 입니다.)

.TP
.B \-a --output-aifc
압축되지 않은(uncompressed) 애플(apple) AIFF-C 형식으로 데이터를
출력합니다. (AIFF-C 데이터는 항상 MSB 퍼스트 바이트 정렬(first byte
order) 입니다.)

.TP
.BI "\-B --batch "
Cdda2wav 형식으로 일괄적으로(batch) 출력하는 옵션입니다; cdparanoia는
트랙에 따라 출력물을 여러 화일로 나눌 것 입니다. 출력 화일 이름은
'track#' 형식입니다.

.TP
.B \-c --force-cdrom-little-endian
어떤 CDROM 드라이브는 endian을 잘못 보고하거나 어떤 것도 보고하지
않습니다; 이것은 cdparanoia 가 못 알아맞힐수 있습니다.
.B \-c
를 사용해서 cdparanoia 가 드라이브를 little endian 장치로 취급하게
합니다.

.TP
.B \-C --force-cdrom-big-endian
위와 마찬가지로 드라이브를 big endian 장치로 취급하게 합니다.

.TP
.BI "\-n --force-default-sectors " n
인터페이스 후위(backend)를 
.B n
섹터만큼 원자(atomic)를 읽게 하도록 합니다.
이 수치는 잘못 이끌어질수 있습니다; 커널은 대개 읽기 요청을 여러개의
원자(multiple atomic) 읽기로 나누거나( Paranoia 코느는 이것을
자동적으로 인식합니다) 한정된 크기의 범위에서만 읽도록 허가하고
있습니다.
.B 이 옵션은 일반적으로 사용되어서는 않됩니다.

.TP
.BI "\-d --force-cdrom-device " device
인터페이스 후위(backend)를 처음 발견된 읽을 수 있는 CDROM 드라이브
보다 
.B device
에서 읽도록 합니다. 이 옵션은 어떤 여러가지 인터페이스(ATAPI, SCSI
혹은 다른 제품)의 여러 장치에서 쓰일수 있습니다.

.TP
.BI "\-g --force-generic-device " device
이 옵션은
.B \-d
와 같이 SCSI CDROM 과 일반적인 장치를 구분적으로 확실한 제어를 원할 때
사용합니다. 이 옵션은 비표준(non-standard) SCSI 셋업에서만 유용하게
쓰일 것 입니다.

.TP
.BI "\-S --force-read-speed " number
이 옵션은 CD 드라이브의 읽기 속도를 확정할 수  있습니다.(지원되는 CD
드라이브에 한 합니다). 이 옵션은 메모리 자원이 적거나 느린 디스크의
컴퓨터가 부족량(underruns)을 줄일 수 있습니다.

.TP
.BI "\-t --toc-offset " number
이 옵션은 주어진 량에 따라 전체 디스크의 LBA 주소 지정을 옮기기 위해
사용합니다;이 수치는 TOC 에서 처음 오프셋에 추가되어 집니다. 이것은
적은 섹터상의 전체 디스크를 수동적으로 트랙 구분을 옮길 수 있습니다.
다음 옵션도 약간 비슷합니다.

.TP
.BI "\-T --toc-bias "
어떤 드라이브는 (대개 Toshibas 제품중 무작위로) TOC에서 실제 트랙 시작
오프셋 값으로 보고 되지만, 모든 읽기 동작에서 트랙 1 인덱스 1의 시작이
섹터 0으로 취급됩니다. 이 결과는 모든 트랙의 시작이 너무 늦어지는 것
같습니다.( 시작 bit 를 잃고, 다음 트랙의 bit 를 가져옵니다 ).
.B \-T
옵션이 이런 것을 없앨 수 있습니다.

.TP
.B \-Z --disable-paranoia
.B 모든
데이터 검증과 보정 기능을 끕니다(Disable). -Z 옵션을 사용할 때,
cdparanoia는 데이터를 cdda2wav 에서 병행(overlap) 셋팅 없이 사용하는
것과 같습니다. 이 옵션은 
.B \-Y
옵션이 동작할 때 포함됩니다.

.TP
.B \-Y --disable-extra-paranoia
내부 읽기 데이터 검증을 끕니다(disable); 범위 읽기(read boundaries)때
단지 병행 검사(overlap chechking)만이 수행됩니다. 권하고 싶지
않습니다.

.TP
.B \-X --abort-on-skip
불완전한 데이터나, 긁힘, 어떤 것 이던지 읽기 스킵(read skip)이
생긴다면 이 트랙을 읽는 것을 중지합니다. 만약 출력물이 화일이라면,
부분적으로 생긴 이 화일을 삭제 합니다.

.SH 출력 상태
.TP
.B
  :-)
정상 동작입니다. 지터(jitter)가 낮거나 없습니다.
.TP
.B
  :-|
정상 동작입니다. 지터(jitter)가 적지 않습니다.
.TP
.B
  :-/
읽기 편류(Read drift)
.TP
.B
  :-P
원자(atomic) 읽기 동작에서 보고되지 않은 스트림의 손실이 있습니다.
.TP
.B
  8-|
같은 장소를 다시 읽는데 읽기 문제가 발생했습니다;수정하기 어렵습니다.
.TP
.B
  :-0
SCSI/ATAPI 전송 에러입니다.
.TP
.B
  :-(
긁힌 곳이 있습니다.
.TP
.B
  ;-(
보정기능을 수행하는 것을 포기합니다.
.TP
.B
  8-X
알려진 이유로 중지되었습니다, 복원할수 없는 에러입니다.
.TP
.B
  :^D
추출이 끝났습니다.

.SH 진행 과정 표시
.TP
.B
<space>
에러 보정이 필요없습니다.
.TP
.B
   -
지터 보정이 필요합니다.
.TP
.B
   +
보고되지 않은 스트림의 손실이나 읽기에서 다른 에러가 발생했습니다.
.TP
.B
   !
보정 1 단계 후 에러가 발견되었습니다; 드라이브는 다수의 재읽기
(multiple re-reads)를 통해 같은 에러가 발생했으며, cdparanoia는 그
것을 감지하는데 문제가 발생했습니다.
.TP
.B
   e
SCSI/ATAPI 전송 에러입니다. (수정되었습니다)
.TP
.B
   V
보정되지 않은 에러/스킵 입니다.

.SH 범위 인자.
범위 인자는 특별히 읽을 트랙과 트랙의 일부 입니다. 이 인자는
필요합니다.
.B 알아둡시다:
범위가 간단한 숫자가 아닐경우, 쉘(shell)로 부터 인식하는 것을 막기위해
인용부호("")를 쓰는 것이 좋습니다.
.P
범위 인자는 아마도 단순한 트랙 번호나 옵셋/범위(offset/span)의 지정 일
것 입니다. 옵셋/범위(offset/span)의 문법은 다음의 대략적 형식을
갖습니다:
.P
1[ww:xx:yy.zz]-2[aa:bb:cc.dd]
.P
여기, 1번과 2번 트랙; 괄호 사이의 숫자는 각각 트랙를 미세하게
조정합니다. [aa:bb:cc.dd] 는 각각 시간/분/초/섹터 의 형식입니다.
0은 부분은 쓸 필요가 없습니다: [::20], [:20], [20], [20.], 등등,
[20.]은 20초로 해석될 것이고, [10:] 은 10분으로, [.30] 은 30 섹터로
해석될 것 입니다. ( 1초는 75 섹터 입니다).
.P
하나의 옵셋만이 주어졌을때, 그것은 시작 옵셋으로 인식하고 그 옵셋부터
그 트랙의 마지막 까지 추출합니다. 만일 하나의 옵셋이 하이픈(hyphen =
-) 과 함께 주어 진다면 무조건 누락된 옵셋은 각각 디스크의 시작이나
끝으로 간주됩니다. 그에 따라:

.TP
.B 1:[20.35]
트랙 1의 20초 35섹터부터 트랙1이 끝날때까지 추출합니다.
.TP
.B 1:[20.35]-
트랙 1의 20초 35섹터부터 디스크의 끝까지 추출합니다.
.TP
.B \-2
디스크의 시작부터 트랙 2까지 추출합니다.
.TP
.B \-2:[30.35]
디스크의 시작부터 트랙 2의 30초 35섹터까지 추출합니다.
.TP
.B 2-4
트랙 2부터 트랙 4까지 추출합니다.
.P
다시 한번 말하지만, 괄호와 하이픈을 쉘(shell)로 부터 해석 하지 않도록
인용부호("")를 쓰는 것을 잊지 마십시오.

.SH 예

여기 약간의 예제가 있습니다, 쉘(shell)로 부터의 해석을 막았습니다:
.TP
드라이브를 남김없이 검색하고 자동반응(autosense)으로 부터의 모든 것을
보고합니다:
.P
       cdparanoia -vsQ
.TP
디스크 전체를 추출하고, 트랙별로 각각 분리된 화일을 만듭니다:
.P
       cdparanoia -B
.TP
트랙 1의 30초 12섹터 부터 트랙 1의 1분 10초 00섹터까지 추출합니다:
.P
       cdparanoia "1[:30.12]-1[1:10]"
.TP
디스크의 시작부터 트랙 3까지 추출합니다:
.P
       cdparanoia -- "-3"
.TP
위에 "--" 은 "-3" 옵션으로 부터 구별하기 위한 것 입니다.
.SH 출력물
출력물의 인자는 선택적입니다; 만약 특별히 설정하지 않는다면
cdparanoia는 출력물를 
.BR \-w ", " \-a ", " \-r " 또는 " \-R 
 옵션의 사용에 따라 
.BR cdda.wav ", "cdda.aifc ", 또는 " cdda.raw
로 할 것 입니다. (
.BR \-w 
옵션이 기본적으로 사용됩니다.) 출력물 인자중
.BR \-
은 특별히 기본 출력입니다; 모든 데이터 형식으로 파이프(pipe) 될 수
있습니다.

.SH 감사
Cdparanoia는 Heiko Eissfeldt (heiko@colossus.escape.de)의 'cdda2wav'의
패키지에서 나왔습니다. 'cdda2wav'가 없었다면 Cdparanoia 도 없었을 것
입니다.
.P
또한 Joerg Schilling 이 그의 SCSI 전송 라이브러리로 부터 SCSI 기술을
제공하였습니다.
.P
.SH 저자
Monty <monty@xiph.org>
.P
Cdparanoia의 홈페이지 입니다:
.P
.ce
http://www.xiph.org/paranoia
.SH 역자
이 효걸 <supr07@kornet.net> 08월 11일 2000년
